{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "C/C++: Build Project w/ g++",
      "type": "shell",
      "command": "/opt/homebrew/bin/g++-13",
      "args": [
        "-fdiagnostics-color=always",
        "-g",
        "${file}",
        "-o",
        "${fileDirname}/${fileBasenameNoExtension}"
      ],
      "options": {
        "cwd": "${fileDirname}"
      },
      "problemMatcher": [
        "$gcc"
      ],
      "group": "build",
      "detail": "Task generated by Nyki."
    },
    {
      "label": "Create a new C++ Project",
      "type": "shell",
      "dependsOrder": "sequence",
      "dependsOn": [
        "create a folder",
        "create a cpp file",
        "create a txt file",
        "create a rtf file",
        "open all files"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "args": [
        "${input:assignmentName}",
        "${input:projectName}"
      ],
      "detail": "Generate a new C++ Project containing a cpp, txt, and rtf file.",
      "problemMatcher": []
    },
    {
      "label": "create a folder",
      "type": "shell",
      "command": "mkdir ${workspaceFolder}/${input:assignmentName}"
    },
    {
      "label": "create a cpp file",
      "type": "shell",
      "command": "touch ${workspaceFolder}/${input:assignmentName}/${input:projectName}.cpp"
    },
    {
      "label": "create a txt file",
      "type": "shell",
      "command": "touch ${workspaceFolder}/${input:assignmentName}/${input:projectName}.txt"
    },
    {
      "label": "create a rtf file",
      "type": "shell",
      "command": "touch ${workspaceFolder}/${input:assignmentName}/${input:projectName}.rtf"
    },
    {
      "label": "open all project files",
      "type": "shell",
      "command": "code -r ${workspaceFolder}/${input:assignmentName}/*"
    },
    {
      "label": "zip project folder",
      "type": "shell",
      "command": "cd ${workspaceFolder}/${input:dynamic folder input} && zip -r ${workspaceFolder}/${input:dynamic folder input}.zip * && mv ${workspaceFolder}/${input:dynamic folder input}.zip ${workspaceFolder}/${input:dynamic folder input}",
      "dependsOn": [
        "list all folders"
      ],
      "problemMatcher": []
    },
    {
      "label": "list all folders",
      "type": "shell",
      "command": "ls",
      "args": [
        "'${input:dynamic folder input}'"
      ],
      "problemMatcher": []
    }
  ],
  "inputs": [
    {
      "id": "assignmentName",
      "description": "Name the assignment: ",
      "default": "New_Assignment_1",
      "type": "promptString"
    },
    {
      "id": "projectName",
      "description": "Name the files: ",
      "default": "New_Project_1",
      "type": "promptString"
    },
    {
      "id": "dynamic folder input",
      "type": "command",
      "command": "folder-operations.getFoldersInWorkspace"
    }
  ]
}